{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Documents/webdev/fullstackopen-sbhbenjamin/part5/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Blog from './components/Blog';\nimport LoginForm from './components/Login';\nimport BlogForm from './components/BlogForm';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport Toggleable from './components/Toggleable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notification = ({\n  message\n}) => {\n  if (message == null) {\n    return null;\n  } else if (message.success) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success\",\n      children: message.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: message.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_c = Notification;\n\nconst App = () => {\n  _s();\n\n  const blogFormRef = useRef();\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState([]);\n  const [password, setPassword] = useState([]);\n  const [user, setUser] = useState(null);\n  const [notification, setNotification] = useState(null);\n  useEffect(() => {\n    const getBlogs = async () => {\n      const blogs = await blogService.getAll();\n      const sortedBlogs = blogs.sort((x, y) => y.likes - x.likes);\n      setBlogs(sortedBlogs);\n    };\n\n    getBlogs();\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    console.log('logging in with ', username, password);\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      setUser(user);\n      setUsername('');\n      setPassword('');\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      setNotification({\n        success: true,\n        message: 'Successfully logged in'\n      });\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    } catch (exception) {\n      setNotification({\n        error: true,\n        message: 'Wrong credentials'\n      });\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    window.localStorage.removeItem('loggedBlogappUser');\n    blogService.removeToken();\n  };\n\n  const handleCreateBlog = async ({\n    title,\n    author,\n    url\n  }) => {\n    try {\n      blogFormRef.current.toggleVisibility();\n      const blog = await blogService.create({\n        title,\n        author,\n        url\n      });\n      setBlogs(blogs.concat(blog));\n      setNotification({\n        success: true,\n        message: `a new blog ${title} by ${author} added`\n      });\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    } catch (exception) {\n      setNotification({\n        error: true,\n        message: 'Error creating blog'\n      });\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }\n  };\n\n  const handleRemoveBlog = async blog => {\n    try {\n      await blogService.remove();\n      const newBlogs = blogs.filter(b => b !== blog);\n      setBlogs(newBlogs);\n    } catch (exception) {\n      setNotification({\n        error: true,\n        message: `Error deleting ${blog.title}: ${exception}`\n      });\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Notification, {\n      message: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"log in to application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), user === null ? /*#__PURE__*/_jsxDEV(LoginForm, {\n      handleSubmit: handleLogin,\n      handleUsernameChange: ({\n        target\n      }) => setUsername(target.value),\n      handlePasswordChange: ({\n        target\n      }) => setPassword(target.value),\n      username: username,\n      password: password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user.name, \" logged in. \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"create new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), user !== null && /*#__PURE__*/_jsxDEV(Toggleable, {\n      buttonLabel: \"create new blog\",\n      children: /*#__PURE__*/_jsxDEV(BlogForm, {\n        handleCreateBlog: handleCreateBlog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n      blog: blog\n    }, blog.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"g1TBjW9LRNkTedA+L4Xe4AUCtrQ=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Notification\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/ben/Documents/webdev/fullstackopen-sbhbenjamin/part5/src/App.js"],"names":["React","useState","useEffect","useRef","Blog","LoginForm","BlogForm","blogService","loginService","Toggleable","Notification","message","success","App","blogFormRef","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","notification","setNotification","getBlogs","getAll","sortedBlogs","sort","x","y","likes","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","console","log","login","setItem","stringify","setTimeout","exception","error","handleLogout","removeItem","removeToken","handleCreateBlog","title","author","url","current","toggleVisibility","blog","create","concat","handleRemoveBlog","remove","newBlogs","filter","b","target","value","name","map","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport LoginForm from './components/Login'\nimport BlogForm from './components/BlogForm'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Toggleable from './components/Toggleable'\n\nconst Notification = ({ message }) => {\n  if (message == null) {\n    return null\n  } else if (message.success) {\n    return <div className=\"success\">{message.message}</div>\n  } else {\n    return <div className=\"error\">{message.message}</div>\n  }\n}\n\nconst App = () => {\n  const blogFormRef = useRef()\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState([])\n  const [password, setPassword] = useState([])\n  const [user, setUser] = useState(null)\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    const getBlogs = async () => {\n      const blogs = await blogService.getAll()\n      const sortedBlogs = blogs.sort((x, y) => y.likes - x.likes)\n      setBlogs(sortedBlogs)\n    }\n    getBlogs()\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log('logging in with ', username, password)\n\n    try {\n      const user = await loginService.login({\n        username,\n        password,\n      })\n      setUser(user)\n      setUsername('')\n      setPassword('')\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\n\n      setNotification({\n        success: true,\n        message: 'Successfully logged in',\n      })\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n    } catch (exception) {\n      setNotification({\n        error: true,\n        message: 'Wrong credentials',\n      })\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogout = () => {\n    setUser(null)\n    window.localStorage.removeItem('loggedBlogappUser')\n    blogService.removeToken()\n  }\n\n  const handleCreateBlog = async ({ title, author, url }) => {\n    try {\n      blogFormRef.current.toggleVisibility()\n      const blog = await blogService.create({\n        title,\n        author,\n        url,\n      })\n      setBlogs(blogs.concat(blog))\n\n      setNotification({\n        success: true,\n        message: `a new blog ${title} by ${author} added`,\n      })\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n    } catch (exception) {\n      setNotification({\n        error: true,\n        message: 'Error creating blog',\n      })\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n    }\n  }\n\n  const handleRemoveBlog = async (blog) => {\n    try {\n      await blogService.remove()\n      const newBlogs = blogs.filter((b) => b !== blog)\n      setBlogs(newBlogs)\n    } catch (exception) {\n      setNotification({\n        error: true,\n        message: `Error deleting ${blog.title}: ${exception}`,\n      })\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      <Notification message={notification} />\n      <h2>log in to application</h2>\n      {user === null ? (\n        <LoginForm\n          handleSubmit={handleLogin}\n          handleUsernameChange={({ target }) => setUsername(target.value)}\n          handlePasswordChange={({ target }) => setPassword(target.value)}\n          username={username}\n          password={password}\n        />\n      ) : (\n        <div>\n          {user.name} logged in. <button onClick={handleLogout}>Logout</button>\n        </div>\n      )}\n\n      <h2>create new</h2>\n      {user !== null && (\n        <Toggleable buttonLabel=\"create new blog\">\n          <BlogForm handleCreateBlog={handleCreateBlog} />\n        </Toggleable>\n      )}\n      {blogs.map((blog) => (\n        <Blog key={blog.id} blog={blog} />\n      ))}\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}