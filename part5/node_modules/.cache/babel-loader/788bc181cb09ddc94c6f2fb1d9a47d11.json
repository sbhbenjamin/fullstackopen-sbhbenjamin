{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Documents/webdev/fullstackopen-sbhbenjamin/part5/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Blog from \"./components/Blog\";\nimport LoginForm from \"./components/Login\";\nimport blogService from \"./services/blogs\";\nimport loginService from \"./services/login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notification = ({\n  message\n}) => {\n  if (message == null) {\n    return null;\n  } else if (message.success) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success\",\n      children: message.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: message.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_c = Notification;\n\nconst App = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState([]);\n  const [password, setPassword] = useState([]);\n  const [user, setUser] = useState(null);\n  const [notification, setNotification] = useState(null);\n  const [title, setTitle] = useState(null);\n  const [author, setAuthor] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogappUser\");\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    console.log(\"logging in with \", username, password);\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      setUser(user);\n      setUsername(\"\");\n      setPassword(\"\");\n      window.localStorage.setItem(\"loggedBlogappUser\", JSON.stringify(user));\n      setNotification({\n        success: true,\n        message: \"Successfully logged in\"\n      });\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    } catch (exception) {\n      setNotification({\n        error: true,\n        message: \"Wrong credentials\"\n      });\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    window.localStorage.removeItem(\"loggedBlogappUser\");\n    blogService.removeToken();\n  };\n\n  const handleBlogCreate = async event => {\n    event.preventDefault();\n    console.log(title, author, url);\n\n    try {\n      const blog = await blogService.create({\n        title,\n        author,\n        url\n      });\n      setBlogs(blogs.concat(blog));\n      setTitle(\"\");\n      setAuthor(\"\");\n      setUrl(\"\");\n      setNotification({\n        success: true,\n        message: `a new blog ${blog.title} by ${blog.author} added`\n      });\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    } catch (exception) {\n      setNotification({\n        error: true,\n        message: \"Error creating blog\"\n      });\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }\n  };\n\n  const blogForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleBlogCreate,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        name: \"Title\",\n        onChange: ({\n          target\n        }) => setTitle(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"author:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: author,\n        name: \"Author\",\n        onChange: ({\n          target\n        }) => setAuthor(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"url:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: url,\n        name: \"Url\",\n        onChange: ({\n          target\n        }) => setUrl(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Notification, {\n      message: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"log in to application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), user === null ? /*#__PURE__*/_jsxDEV(LoginForm, {\n      handleSubmit: handleLogin,\n      handleUsernameChange: ({\n        target\n      }) => setUsername(target),\n      handlePasswordChange: ({\n        target\n      }) => setPassword(target),\n      username: username,\n      password: password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user.name, \" logged in. \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"create new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), user !== null && blogForm(), blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n      blog: blog\n    }, blog.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Gz4FV+PVqXJdIxr2b9zO527xp+U=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Notification\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/ben/Documents/webdev/fullstackopen-sbhbenjamin/part5/src/App.js"],"names":["React","useState","useEffect","Blog","LoginForm","blogService","loginService","Notification","message","success","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","notification","setNotification","title","setTitle","author","setAuthor","url","setUrl","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","console","log","login","setItem","stringify","setTimeout","exception","error","handleLogout","removeItem","removeToken","handleBlogCreate","blog","create","concat","blogForm","target","value","name","map","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport Blog from \"./components/Blog\"\nimport LoginForm from \"./components/Login\"\nimport blogService from \"./services/blogs\"\nimport loginService from \"./services/login\"\n\nconst Notification = ({ message }) => {\n  if (message == null) {\n    return null\n  } else if (message.success) {\n    return <div className=\"success\">{message.message}</div>\n  } else {\n    return <div className=\"error\">{message.message}</div>\n  }\n}\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState([])\n  const [password, setPassword] = useState([])\n  const [user, setUser] = useState(null)\n  const [notification, setNotification] = useState(null)\n  const [title, setTitle] = useState(null)\n  const [author, setAuthor] = useState(null)\n  const [url, setUrl] = useState(null)\n\n  useEffect(() => {\n    blogService.getAll().then((blogs) => setBlogs(blogs))\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogappUser\")\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log(\"logging in with \", username, password)\n\n    try {\n      const user = await loginService.login({\n        username,\n        password,\n      })\n      setUser(user)\n      setUsername(\"\")\n      setPassword(\"\")\n      window.localStorage.setItem(\"loggedBlogappUser\", JSON.stringify(user))\n\n      setNotification({\n        success: true,\n        message: \"Successfully logged in\",\n      })\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n    } catch (exception) {\n      setNotification({\n        error: true,\n        message: \"Wrong credentials\",\n      })\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogout = () => {\n    setUser(null)\n    window.localStorage.removeItem(\"loggedBlogappUser\")\n    blogService.removeToken()\n  }\n\n  const handleBlogCreate = async (event) => {\n    event.preventDefault()\n    console.log(title, author, url)\n\n    try {\n      const blog = await blogService.create({\n        title,\n        author,\n        url,\n      })\n      setBlogs(blogs.concat(blog))\n      setTitle(\"\")\n      setAuthor(\"\")\n      setUrl(\"\")\n\n      setNotification({\n        success: true,\n        message: `a new blog ${blog.title} by ${blog.author} added`,\n      })\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n    } catch (exception) {\n      setNotification({\n        error: true,\n        message: \"Error creating blog\",\n      })\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n    }\n  }\n\n  const blogForm = () => (\n    <form onSubmit={handleBlogCreate}>\n      <div>\n        title:\n        <input\n          type=\"text\"\n          value={title}\n          name=\"Title\"\n          onChange={({ target }) => setTitle(target.value)}\n        />\n      </div>\n      <div>\n        author:\n        <input\n          type=\"text\"\n          value={author}\n          name=\"Author\"\n          onChange={({ target }) => setAuthor(target.value)}\n        />\n      </div>\n      <div>\n        url:\n        <input\n          type=\"text\"\n          value={url}\n          name=\"Url\"\n          onChange={({ target }) => setUrl(target.value)}\n        />\n      </div>\n      <button type=\"submit\">create</button>\n    </form>\n  )\n\n  return (\n    <div>\n      <Notification message={notification} />\n      <h2>log in to application</h2>\n      {user === null ? (\n        <LoginForm\n          handleSubmit={handleLogin}\n          handleUsernameChange={({ target }) => setUsername(target)}\n          handlePasswordChange={({ target }) => setPassword(target)}\n          username={username}\n          password={password}\n        />\n      ) : (\n        <div>\n          {user.name} logged in. <button onClick={handleLogout}>Logout</button>\n        </div>\n      )}\n\n      <h2>create new</h2>\n      {user !== null && blogForm()}\n      {blogs.map((blog) => (\n        <Blog key={blog.id} blog={blog} />\n      ))}\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}